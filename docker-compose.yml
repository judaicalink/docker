services:
  # Postgres
  postgres:
    image: "postgres:latest"
    container_name: postgres
    restart: always
    shm_size: 128mb
    ports:
      - "5433:5432" # Mapping host port 5433 to container port 5432
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_USER}

    networks:
      - judaicalink-webnet

  # JudaicaLink Site
  site:
    build:
      context: ./judaicalink-site
      args:
        GIT_REPO_URL: https://github.com/judaicalink/judaicalink-site
        GIT_BRANCH: master
    container_name: judaicalink-site
    ports:
      - "8000:80"
    expose:
      - "80"
      - "443"
    networks:
      - judaicalink-webnet

  #JudaicaLink Labs
  # TODO: Labs
  labs:
    build:
      context: ./judaicalink-labs
      args:
        GIT_REPO_URL: https://github.com/judaicalink/judaicalink-labs.git
        GIT_BRANCH: solr
    container_name: labs
    command: tail -f /dev/null
    #env_file:
    #  - .env  # Loads environment variables including DATABASE_URL
    depends_on:
      - postgres
      - data
      - solr
      - fuseki
      - redis
      - mailserver
      - ontology
    volumes_from:
      - data
    ports:
      - "8000:8000" # Expose port for external access
    networks:
      - judaicalink-webnet

  # Pubby Django
  pubby:
    build:
      context: ./pubby
      args:
        GIT_REPO_URL: https://github.com/lod-pubby/pubby-django.git
        GIT_BRANCH: judaicalink
    container_name: pubby
    depends_on:
      - fuseki
      - solr
      - redis
      - postgres
    ports:
      - "8002:8000"
    networks:
      - judaicalink-webnet

  # Judaicalink Ontology
  ontology:
    build:
      context: ./judaicalink-ontology
      args:
        GIT_REPO_URL: https://github.com/judaicalink/judaicalink-ontology.git
        GIT_BRANCH: master
        FUSEKI_PASSWORD: ${FUSEKI_PASSWORD}
        FUSEKI_SERVER: ${FUSEKI_SERVER}
        FUSEKI_USER: ${FUSEKI_USER}
        FUSEKI_STORAGE: ${FUSEKI_STORAGE}
    container_name: ontology
    command: tail -f /dev/null
    networks:
      - judaicalink-webnet

  # Judaicalink Loader
  loader:
    build:
      context: ./judaicalink-loader
      args:
        GIT_REPO_URL: https://github.com/judaicalink/judaicalink-loader.git
        GIT_BRANCH: master
    container_name: loader
    command: tail -f /dev/null
    expose:
      - "8005:8005"
    networks:
      - judaicalink-webnet

  # JudaicaLink Dumps
  dumps:
    build:
      context: ./judaicalink-dumps
      args:
        GIT_REPO_URL: https://github.com/judaicalink/dumps.git
        GIT_BRANCH: main
    container_name: dumps
    command: tail -f /dev/null
    volumes:
      - ./data/dumps:/data/dumps
    expose:
      - "8006:8006"
    networks:
      - judaicalink-webnet

  # JudaicaLink Generators
  # TODO: Generators
  generators:
    build:
      context: ./judaicalink-generators
      args:
        GIT_REPO_URL: https://github.com/judaicalink/judaicalink-generators.git
        GIT_BRANCH: master
    container_name: generators
    volumes:
      - ./data/generators:/data/generators
    expose:
      - "8004:8004"
    networks:
      - judaicalink-webnet

  # SOLR
  solr:
    image: solr:latest
    container_name: solr
    ports:
      - "8983:8983"
    networks:
      - judaicalink-webnet

  # Fuseki
  fuseki:
    image: "secoresearch/fuseki"
    container_name: fuseki
    environment:
      - ADMIN_PASSWORD=${FUSEKI_PASSWORD}
    ports:
      - "3030:3030"
    volumes:
      - fuseki-data:/fuseki/data
    networks:
      - judaicalink-webnet

  # Redis
  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"
    networks:
      - judaicalink-webnet

  # Mailserver
  mailserver:
    image: mailserver/docker-mailserver:latest
    container_name: mailserver
    hostname: mail
    domainname: judaicalink.org
    env_file: mail.env
    ports:
      - "25:25"       # SMTP
      - "143:143"     # IMAP
      - "587:587"     # Submission
      - "993:993"     # IMAPS
    volumes:
      - maildata:/var/mail
      - mailstate:/var/mail-state
      - maillogs:/var/log/mail
      - ./config/:/tmp/docker-mailserver/
    environment:
      - ENABLE_SPAMASSASSIN=1
      - ENABLE_CLAMAV=1
      - ENABLE_FAIL2BAN=1
      - ENABLE_POSTGREY=0
      - ONE_DIR=1
      - DMS_DEBUG=0
    cap_add:
      - NET_ADMIN
      - SYS_PTRACE
    restart: unless-stopped

    # add the password
    # docker exec -it mailserver setup email add user@example.com password

  # Roundcube
  webmail:
    image: roundcube/roundcubemail:latest
    container_name: webmail
    environment:
      - ROUNDCUBEMAIL_DEFAULT_HOST=mail
      - ROUNDCUBEMAIL_SMTP_SERVER=mail
      - ROUNDCUBEMAIL_SMTP_PORT=587
    ports:
      - "8080:80"  # Access Roundcube on localhost:8080
    depends_on:
      - mailserver
    volumes:
      - roundcube-data:/var/www/html

  # NGINX as reverse proxy
  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
    depends_on:
      - site
      - labs
      - pubby
      - solr
      - fuseki
      - mailserver
      - webmail
      - ontology
      - loader
      - dumps
      - generators
      - redis
      - postgres
    networks:
      - judaicalink-webnet

  # Data
  data:
    build:
      context: ./data
    container_name: data
    command: tail -f /dev/null # Keeps the container running indefinitely
    volumes:
      - ./data/cm:/data/cm # Mount a local folder to persist data
    networks:
      - judaicalink-webnet

volumes:
  maildata:
  mailstate:
  maillogs:
  roundcube-data:
  fuseki-data:
  judaicalink-generators:

networks:
  judaicalink-webnet:
    driver: bridge
