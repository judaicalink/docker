services:
  # Postgres
  postgres:
    image: "postgres:latest"
    container_name: postgres
    restart: always
    shm_size: 128mb
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_USER}
      POSTGRES_PORT: ${POSTGRES_PORT}
    ports:
        - ${POSTGRES_PORT}:5432
    networks:
      - judaicalink-webnet

  adminer:
    image: adminer
    container_name: adminer
    restart: always
    ports:
      - 8081:8080

  # JudaicaLink Site
  site:
    build:
      context: ./judaicalink-site
      args:
        GIT_REPO_URL: https://github.com/judaicalink/judaicalink-site
        GIT_BRANCH: master
    container_name: judaicalink-site
    volumes:
      - data:/data
    volumes_from:
      - data
    ports:
      - "8000:80"
    expose:
      - "80"
      - "443"
    networks:
      - judaicalink-webnet

  #JudaicaLink Labs
  labs:
    build:
      context: ./labs
      args:
        GIT_REPO_URL: https://github.com/judaicalink/judaicalink-labs.git
        GIT_BRANCH: solr
        LOGFILE: ${LOGFILE}
        DATABASE_URL: ${DATABASE_URL}
        DATABASE_ENGINE: ${DATABASE_ENGINE}
        DATABASE_NAME: ${DATABASE_NAME}
        STATIC_ROOT: ${STATIC_ROOT}
        MEDIA_ROOT: ${MEDIA_ROOT}
        POSTGRES_HOST: ${POSTGRES_HOST}
        POSTGRES_PORT: ${POSTGRES_PORT}
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        POSTGRES_DB: ${POSTGRES_DB}

    container_name: labs
    #command: tail -f /dev/null
    environment:
      DJANGO_SETTINGS_MODULE: labs.settings
    env_file:
      - .env  # Loads environment variables including DATABASE_URL
    depends_on:
      - postgres
      - data
      - solr
      - fuseki
      - redis
      #- mailserver
      - ontology
    #volumes_from:
    #  - data
    ports:
      - "8001:8001" # Expose port for external access
    expose:
      - "8001"
    networks:
      - judaicalink-webnet

  # Pubby Django
  pubby:
    build:
      context: ./pubby
      args:
        GIT_REPO_URL: https://github.com/lod-pubby/pubby-django.git
        GIT_BRANCH: judaicalink
    container_name: pubby
    depends_on:
      - fuseki
      - solr
      - redis
      - postgres
    ports:
      - "8002:8000"
    networks:
      - judaicalink-webnet

  # Judaicalink Ontology
  ontology:
    build:
      context: ./judaicalink-ontology
      args:
        GIT_REPO_URL: https://github.com/judaicalink/judaicalink-ontology.git
        GIT_BRANCH: master
        FUSEKI_PASSWORD: ${FUSEKI_PASSWORD}
        FUSEKI_SERVER: ${FUSEKI_SERVER}
        FUSEKI_USER: ${FUSEKI_USER}
        FUSEKI_STORAGE: ${FUSEKI_STORAGE}
    container_name: ontology
    command: tail -f /dev/null
    networks:
      - judaicalink-webnet

  # Judaicalink Loader
  loader:
    build:
      context: ./judaicalink-loader
      args:
        GIT_REPO_URL: https://github.com/judaicalink/judaicalink-loader.git
        GIT_BRANCH: master
    container_name: loader
    command: tail -f /dev/null
    volumes:
      - data:/data
    volumes_from:
      - data
    depends_on:
      - site
      #- dumps
      - fuseki
      #- nginx
    extra_hosts:
      - "fuseki:172.17.0.1"
      - "fuseki:127.0.0.1"
    links:
      - fuseki
    networks:
      - judaicalink-webnet

  # JudaicaLink Dumps
  #dumps:
  #  build:
  #    #context: ./judaicalink-dumps
  #    args:
  #      GIT_REPO_URL: https://github.com/judaicalink/dumps.git
  #      GIT_BRANCH: main
  #  container_name: dumps
  #  command: tail -f /dev/null
  #  volumes:
  #    - data:/data
  #  volumes_from:
  #    - data
  #  networks:
  #    - judaicalink-webnet
  #    - judaicalink-webnet

  # JudaicaLink Generators
  generators:
    build:
      context: ./judaicalink-generators
      args:
        GIT_REPO_URL: https://github.com/judaicalink/judaicalink-generators.git
        GIT_BRANCH: master
    container_name: generators
    command: tail -f /dev/null
    volumes:
      - ./data/generators:/data/generators
    expose:
      - "8004:8004"
    networks:
      - judaicalink-webnet

  # SOLR
  solr:
    #build:
    #    context: ./solr
    #    dockerfile: Dockerfile
    image: solr:latest
    container_name: solr
    ports:
      - "8983:8983"
    volumes:
      - solr_data:/var/solr
      - ./solr/indices/data.json:/data.json
      - ./solr/solr-init.sh:/docker-entrypoint-initdb.d/solr-init.sh
    networks:
      - judaicalink-webnet
    #restart: always
    environment:
      - SOLR_HOME=/var/solr/data
    entrypoint:
      - docker-entrypoint.sh
      - bash
      - "-c"
      - "precreate-core cm; precreate-core cm_meta; precreate-core cm_entities; precreate-core cm_entity_names; precreate-core judaicalink; precreate-core judaicalink-beta"
    command: [ "/bin/bash", "-c", "ls -l /docker-entrypoint-initdb.d && /docker-entrypoint-initdb.d/solr-init.sh" ]

  # Fuseki
  fuseki:
    image: "secoresearch/fuseki"
    container_name: fuseki
    environment:
      - ADMIN_PASSWORD=${FUSEKI_PASSWORD}
    ports:
      - "3030:3030"
    volumes:
      - fuseki-data:/fuseki/data
    networks:
      - judaicalink-webnet

  # Redis
  redis:
    image: "redis:alpine"
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - judaicalink-webnet

  # Mailserver
  #mailserver:
  #  image: mailserver/docker-mailserver:latest
  #  container_name: mailserver
  #  hostname: mail
  #  domainname: judaicalink.org
  #  env_file: mail.env
  #  ports:
  #    - "25:25"       # SMTP
  #    - "143:143"     # IMAP
  #    - "587:587"     # Submission
  #    - "993:993"     # IMAPS
  #  volumes:
  #    - maildata:/var/mail
  #    - mailstate:/var/mail-state
  #    - maillogs:/var/log/mail
  #    - ./config/:/tmp/docker-mailserver/
  #  environment:
  #    - ENABLE_SPAMASSASSIN=1
  #    - ENABLE_CLAMAV=1
  #    - ENABLE_FAIL2BAN=1
  #    - ENABLE_POSTGREY=0
  #    - ONE_DIR=1
  #    - DMS_DEBUG=0
  #  cap_add:
  #    - NET_ADMIN
  #    - SYS_PTRACE
  #  restart: unless-stopped

    # add the password
    # docker exec -it mailserver setup email add user@example.com password

  # Roundcube
  #webmail:
  #  image: roundcube/roundcubemail:latest
  #  container_name: webmail
  #  environment:
  #    - ROUNDCUBEMAIL_DEFAULT_HOST=mail
  #    - ROUNDCUBEMAIL_SMTP_SERVER=mail
  #    - ROUNDCUBEMAIL_SMTP_PORT=587
  #  ports:
  #    - "8080:80"  # Access Roundcube on localhost:8080
  #  depends_on:
  #    - mailserver
  #  volumes:
  #    - roundcube-data:/var/www/html

  # NGINX as reverse proxy
  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
      - "443:443"
     # - "3030:3030"
    depends_on:
      - site
      - labs
      - pubby
      - solr
      - fuseki
      #- mailserver
      #- webmail
      - ontology
      - loader
      #- dumps
      - generators
      - redis
      - postgres
    networks:
      - judaicalink-webnet

  # Data
  data:
    #build:
    #  context: ./data
    image: alpine:latest
    container_name: data
    user: root
    command: tail -f /dev/null # Keeps the container running indefinitely
    volumes:
      - ./data/cm:/data/cm # Mounts the Compact Memory full texts
      - ./data/dumps:/data/dumps # Mounts the dumps from the local folder
      - smb_share:/data/smbshare # Mounts the SMB share, this is for CM full texts , FIXME: remove /data/cm
      #- data:/data  # Mount persistent volume
    networks:
      - judaicalink-webnet
    restart: unless-stopped

volumes:
  # for the mailserver
  #maildata:
  #mailstate:
  #maillogs:
  #roundcube-data:

  # For fuseki
  fuseki-data:
  #judaicalink-generators:
  # for labs, SOLR
  solr_data:
    driver: local
  data:
    driver: local
  smb_share:
    driver: local
    driver_opts:
      type: cifs
      o: "addr=${SAMBA_SERVER},username=${SAMBA_USER},password=${SAMBA_PASS}"
      device: "//${SAMBA_SERVER}/${SAMBA_SHARE}"


networks:
  judaicalink-webnet:
    driver: bridge
